version: "3.8"

services:
  postgredb:
    image: postgres:alpine3.20
    container_name: postgredb
    environment:
      POSTGRES_PASSWORD: postgredb12
      POSTGRES_DB: cinemadb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  userauthapi:
    build:
      context: .
      dockerfile: UserAuthApi/Dockerfile
    container_name: userauthapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__cinemadb=Server=postgredb;Port=5432;Database=cinemadb;User Id=postgres;Password=postgredb12;
    depends_on:
      - postgredb
    networks:
      - mynetwork
    command: >
      sh -c "dotnet ef database update && dotnet UserAuthApi.dll"
    ports:
      - "5002:81"

  cinemabookingapi:
    build:
      context: .
      dockerfile: CinemaBookingApi/Dockerfile
    container_name: cinemabookingapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__cinemadb=Server=postgredb;Port=5432;Database=cinemadb;User Id=postgres;Password=postgredb12;
    depends_on:
      - postgredb
    networks:
      - mynetwork
    command: >
      sh -c "dotnet ef database update && dotnet CinemaBookingApi.dll"
    ports:
      - "5001:80"

networks:
  mynetwork:
    external: true

volumes:
  postgres_data:
# aynı network yapılandırması ile ayağa kaldır
