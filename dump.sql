--
-- PostgreSQL database dump
--

-- Dumped from database version 16.3
-- Dumped by pg_dump version 16.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: CinemaSeats; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."CinemaSeats" (
    id integer NOT NULL,
    name text NOT NULL,
    "isBooked" boolean NOT NULL,
    "UserId" bigint
);


ALTER TABLE public."CinemaSeats" OWNER TO postgres;

--
-- Name: CinemaSeats_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."CinemaSeats" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."CinemaSeats_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Name: user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."user" (
    id bigint NOT NULL,
    password text,
    "isConfirmed" boolean,
    email text,
    "refreshToken" text,
    "refreshTokenExpiryTime" timestamp with time zone
);


ALTER TABLE public."user" OWNER TO postgres;

--
-- Name: user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."user" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: CinemaSeats; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."CinemaSeats" (id, name, "isBooked", "UserId") FROM stdin;
2	seat2	f	\N
3	seat3	f	\N
1	seat1	f	\N
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20240608174423_InitialMigration	8.0.6
20240608175952_UserPropUpdate	8.0.6
20240609111444_UserRefreshTokenUpdate	8.0.6
20240610102804_InitialMigrationCinema	8.0.6
\.


--
-- Data for Name: user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."user" (id, password, "isConfirmed", email, "refreshToken", "refreshTokenExpiryTime") FROM stdin;
1	deneme	t	fogovos641@kernuo.com	c9cCIt2g0Clk1Kh2G5hUx2CopCrjKrl9Ax7xQYHblVClMx8Iwf51lgJzoM03+2DO62pqSEO5qjoNufpk7FlUQw==	2024-06-18 10:51:46.51372+00
\.


--
-- Name: CinemaSeats_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."CinemaSeats_id_seq"', 1, false);


--
-- Name: user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.user_id_seq', 1, true);


--
-- Name: CinemaSeats PK_CinemaSeats; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."CinemaSeats"
    ADD CONSTRAINT "PK_CinemaSeats" PRIMARY KEY (id);


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: user PK_user; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT "PK_user" PRIMARY KEY (id);


--
-- Name: IX_CinemaSeats_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_CinemaSeats_UserId" ON public."CinemaSeats" USING btree ("UserId");


--
-- Name: CinemaSeats FK_CinemaSeats_user_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."CinemaSeats"
    ADD CONSTRAINT "FK_CinemaSeats_user_UserId" FOREIGN KEY ("UserId") REFERENCES public."user"(id);


--
-- PostgreSQL database dump complete
--

